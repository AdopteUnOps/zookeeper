version: '2'
services:
  zookeeper-conf:
    labels:
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.start_once: 'true'
      io.rancher.container.hostname_override: container_name
    image: rawmind/rancher-zk:3.4.9
    network_mode: none
  zookeeper:
    ports:
    - 2181:2181/tcp
    environment:
      JVMFLAGS: -Xms1g -Xmx1g -XX:+UseCompressedOops -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+DisableExplicitGC -javaagent:/tmp/jmx_prometheus_javaagent-0.10.jar=1234:/tmp/jmx_exporter.yml
      ZK_DATA_DIR: /opt/zk/data
      ZK_INIT_LIMIT: '10'
      ZK_MAX_CLIENT_CXNS: '500'
      ZK_SYNC_LIMIT: '5'
      ZK_TICK_TIME: '2000'
    labels:
      io.rancher.sidekicks: zookeeper-conf
      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: role_zookeeper=true
      io.rancher.container.pull_image: always
      com.prometheus.monitoring: true
      com.prometheus.port: 1234
    tty: true
    image: adopteunops/zookeeper
    volumes:
    - zookeeper-volume:/opt/zk/data
    volumes_from:
    - zookeeper-conf
  zookeeper-viewer:
    environment:
      ZK_DEFAULT_NODE: zookeeper:2181
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
    tty: true
    image: tobilg/zookeeper-webui
    links:
    - 'zookeeper:'
    stdin_open: true
volumes:
  zookeeper-volume:
    per_container: true
